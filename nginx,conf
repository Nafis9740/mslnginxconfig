limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
limit_req_zone $binary_remote_addr zone=apiLimit:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=siteLimit:10m rate=30r/s;

server {
       listen         80;
       server_name    mystudentlounge.com www.mystudentlounge.com;
       return         301 https://$server_name$request_uri;
}



server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name  mystudentlounge.com;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/mystudentlounge.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mystudentlounge.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    # ssl_dhparam /path/to/dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDH$
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;


    resolver 8.8.8.8;



     gzip on;
     gzip_disable "msie6";
     gzip_vary on;
     gzip_proxied any;
     gzip_comp_level 6;
     gzip_buffers 16 8k;
     gzip_http_version 1.1;
     gzip_min_length 256;
     gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobjec$

    location /api/user_accounts/login {
      limit_req zone=login burst=5;
      proxy_pass "http://localhost:3000/api/user_accounts/login";
    }


    location /api/ {
      limit_req zone=apiLimit burst=20 nodelay;
      client_max_body_size 102M;
      proxy_pass "http://localhost:3000/api/";

    }

    location /recover {
  limit_req zone=login burst=5;
      proxy_pass "http://localhost:3000/recover";
    }

    location /reset-password {
      limit_req zone=login burst=5;
      proxy_pass "http://localhost:3000/reset-password";
    }


    location /request-password-reset {
      limit_req zone=login burst=5;
      proxy_pass "http://localhost:3000/request-password-reset";
    }


    location /api/attachments/ {
      client_max_body_size 102M;
      rewrite ^ $request_uri;
        rewrite ^/api/attachments(.*) $1 break;
 return 400;
      proxy_pass "http://localhost:3000/api/attachments$uri";
    }

    location /verified/ {
      proxy_pass "http://localhost:3000/verified/";
    }





    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
      root    /home/ubuntu/msl_angular/dist/;
      expires max;
    }

    # pass requests for dynamic content to rails/turbogears/zope, et al
    location / {
      limit_req zone=apiLimit burst=20 nodelay;
 proxy_pass "http://localhost:3000/api/attachments$uri";
    }

    location /verified/ {
      proxy_pass "http://localhost:3000/verified/";
    }





    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
      root    /home/ubuntu/msl_angular/dist/;
      expires max;
    }

    # pass requests for dynamic content to rails/turbogears/zope, et al
    location / {
      limit_req zone=apiLimit burst=20 nodelay;
      alias /home/ubuntu/msl_angular/dist/;
      try_files $uri /index.html;
    }
